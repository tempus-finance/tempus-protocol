version: '2.1'
orbs:
  node: circleci/node@4.6.0
  coveralls: coveralls/coveralls@1.0.6
jobs:
  job-unit_tests_coverage:
    executor:
      name: node/default
      tag: '15.11'
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          command:
            yarn coverage
      - coveralls/upload:
          parallel: true

  job-integration_tests_coverage:
    executor:
      name: node/default
      tag: '15.11'
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          command: |
            export ETH_NODE_URI_MAINNET=$ETH_NODE_URI_MAINNET_ALCHEMY
            yarn coverage:integration
      - coveralls/upload:
          parallel: true

  job-unit_tests:
    executor:
      name: node/default
      tag: '15.11'
    resource_class: xlarge
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: "Run unit tests"
          command: yarn test

  job-solhint:
    executor:
      name: node/default
      tag: '15.11'
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: "Run solhint and lint-check"
          command: |
            yarn solhint
            yarn lint-check

  job-coverage:
    executor:
      name: node/default
      tag: '15.11'
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: "Run coverage"
          command: yarn coverage
      - coveralls/upload
      - store_artifacts:
          path: coverage
          prefix: coverage

  job-integration_tests:
    executor:
      name: node/default
      tag: '15.11'
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: "Run integration tests"
          command: yarn test:integration

  job-save_and_upload_coverage_artifacts:
    executor:
      name: node/default
      tag: '15.11'
    steps:
      - coveralls/upload:
          parallel_finished: true
      - store_artifacts:
          path: coverage
          prefix: coverage

  job-localDeployment:
    executor:
      name: node/default
      tag: '15.11'
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: "Deploy on local network"
          command: yarn deploy-ci

  job-localDeploymentForkMainnet:
    executor:
      name: node/default
      tag: '15.11'
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: "Deploy on forked mainnet"
          command:
            yarn deploy-ci:fork:mainnet

  job-MythX-Pool:
    docker:
      - image: tempusfinance/tempus-mythx:latest
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: "Run mythx"
          no_output_timeout: 30m
          command: yarn mythx-pool

  job-MythX-AMM:
    docker:
      - image: tempusfinance/tempus-mythx:latest
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: "Run mythx"
          no_output_timeout: 30m
          command: yarn mythx-amm

  job-MythX-Misc:
    docker:
      - image: tempusfinance/tempus-mythx:latest
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: "Run mythx"
          no_output_timeout: 30m
          command: yarn mythx-misc

  job-echidna-lido-pool:
    docker:
      - image: tempusfinance/tempus-echidna:latest
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: "Run Echidna lido pool"
          no_output_timeout: 30m
          command: |
            yarn echidna-test:pool:lido
  
  job-echidna-yearn-pool:
    docker:
      - image: tempusfinance/tempus-echidna:latest
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: "Run Echidna yearn pool"
          no_output_timeout: 30m
          command: |
            yarn echidna-test:pool:yearn

  job-echidna-assertion-lido-pool:
    docker:
      - image: tempusfinance/tempus-echidna:latest
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: "Run Echidna assertion lido pool"
          no_output_timeout: 30m
          command: |
            yarn echidna-test-assertion:pool:lido

  job-echidna-assertion-yearn-pool:
    docker:
      - image: tempusfinance/tempus-echidna:latest
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: "Run Echidna assertion yearn pool"
          no_output_timeout: 30m
          command: |
            yarn echidna-test-assertion:pool:yearn

workflows:
  code_coverage:
    jobs:
      - job-unit_tests_coverage:
          context: 
            - Coveralls
      - job-integration_tests_coverage:
          context: 
            - Coveralls
      - job-save_and_upload_coverage_artifacts:
          context: 
            - Coveralls
          requires:
              - job-unit_tests_coverage
              - job-integration_tests_coverage
  unit_tests:
    jobs:
      - job-unit_tests
  integration_tests:
    jobs:
      - job-integration_tests
  solhint:
    jobs:
      - job-solhint
  test_local_deployment:
    jobs:
      - job-localDeployment
  test_local_deployment_fork_mainnet:
    jobs:
      - job-localDeploymentForkMainnet
  mythx_pool:
    jobs:
      - job-MythX-Pool
  mythx_amm:
    jobs:
      - job-MythX-AMM
  mythx_misc:
    jobs:
      - job-MythX-Misc
  echidna:
    jobs:
      - job-echidna-lido-pool
      - job-echidna-yearn-pool
      - job-echidna-assertion-lido-pool
      - job-echidna-assertion-yearn-pool

notify:
  webhooks:
    - url: https://coveralls.io/webhook?repo_token=${COVERALLS_REPO_TOKEN}
